---
# tasks file for wireguard
- name: Ensure required packages are installed
  ansible.builtin.package:
    name:
      - wireguard
    state: present

- name: Ensure ip forwarding is set on boot
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    line: net.ipv4.ip_forward=1
    state: present
  notify: Restart systemd-sysctl

- name: Get private key if already exists
  ansible.builtin.command: cat /etc/wireguard/private_key_hash.txt
  register: private_key_hash
  changed_when: false
  failed_when: false

- name: Set private key
  ansible.builtin.set_fact:
    wireguard_private_key_hash: private_key_hash.stdout
  when: private_key_hash.stdout != "" and wireguard_private_key is not defined

- name: Generate wireguard private key
  ansible.builtin.include_tasks: generate_keys.yml
  when: wireguard_private_key is not defined and wireguard_private_key_hash is not defined

- name: Copy wireguard config file to remote
  ansible.builtin.template:
    src: wg.conf.j2
    dest: "/etc/wireguard/{{ wireguard_interface_name }}.conf"
    mode: "0644"
  notify: Restart wireguard

- name: Add peers to wireguard config
  ansible.builtin.blockinfile:
    block: |
      [Peer]
      PublicKey = {{ item.public_key }}
      AllowedIPs = {{ item.allowed_ips }}
    path: "/etc/wireguard/{{ wireguard_interface_name }}.conf"
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ idx }}"
    prepend_newline: true
    append_newline: true
  loop: "{{ wireguard_peers }}"
  loop_control:
    index_var: idx

- name: Enable wireguard systemd service
  ansible.builtin.systemd:
    name: wg-quick@{{ wireguard_interface_name }}.service
    state: started
    enabled: true
